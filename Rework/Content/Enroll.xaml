<UserControl x:Class="Rework.Content.Enroll"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:viewmodel="clr-namespace:Rework.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Dialog:DialogParticipation.Register="{Binding}"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:local="clr-namespace:Rework.Content"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  This is the template for the menu items.  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <materialDesignConverters:BrushRoundConverter x:Key="BrushRoundConverter" />

            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                   BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                                   Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                                   Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                           Focusable="False"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type Controls:HamburgerMenu}}"
                   TargetType="{x:Type Controls:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0"
                Margin="10 10 10 10"
                BorderBrush="{DynamicResource GrayBrush7}"
                BorderThickness="1">

            <Controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                    HamburgerHeight="0"
                                    HamburgerVisibility="Collapsed"
                                    IsPaneOpen="True"
                                    ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                    ItemTemplate="{StaticResource MenuItemTemplate}"
                                    OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                    SelectedIndex="0"
                                    Style="{StaticResource HamburgerMenuCreatorsStyle}"
                                    VerticalScrollBarOnLeftSide="False">
                <!--  Items  -->
                <Controls:HamburgerMenu.ItemsSource>
                    <Controls:HamburgerMenuItemCollection>
                        <Controls:HamburgerMenuIconItem Label="Children">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <UserControl DataContext="{StaticResource EnrollVM}">
                                    <Grid>
                                        <WrapPanel Width="400" HorizontalAlignment="Left">
                                            <TextBlock Text="Fullname: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                            <TextBox x:Name="ChildrenTxtB" Text="{Binding ChildrenName, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <TextBlock Text="Nickname: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                            <TextBox x:Name="NickNameTxtB" Text="{Binding NickName, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <TextBlock Text="Birthdate: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                            <DatePicker x:Name="BirthDatePicker" Focusable="True" SelectedDate="{x:Static sys:DateTime.Now}" Text="{Binding BirthDate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <TextBlock  Text="Sex: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                            <ComboBox x:Name="SexCBB" Text="{Binding Sex, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16" SelectedIndex="0">
                                                <ComboBoxItem Content="Male"/>
                                                <ComboBoxItem Content="Female"/>
                                            </ComboBox>
                                            <TextBlock Text="Class: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                            <ComboBox x:Name="ClassNameCBB" ItemsSource="{Binding AvailableClasses}" Text="{Binding ClassName, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16" SelectedIndex="0"/>
                                            <Button Command="" x:Uid="1" IsDefault="True" Width="100" Height="30" Margin="280 30 0 0" Content="Next" Style="{DynamicResource AccentedSquareButtonStyle}" Click="Button_Click"/>
                                        </WrapPanel>
                                    </Grid>
                                </UserControl>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                        <Controls:HamburgerMenuIconItem Label="Parent" x:Name="ParentSection">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <UserControl DataContext="{StaticResource EnrollVM}">
                                    <Grid>
                                        <WrapPanel Width="500" HorizontalAlignment="Left">
                                            <TextBlock Text="Mother's name: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                            <TextBox x:Name="Mothertxb" Text="{Binding MotherName, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <TextBlock Text="Father's name: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                            <TextBox x:Name="Fathertxb" Text="{Binding FatherName, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <TextBlock Text="Address: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                            <TextBox x:Name="Addresstxb" Text="{Binding Address, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <TextBlock Text="Phone number: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                            <TextBox x:Name="Phonetxb" Text="{Binding PhoneNumber, UpdateSourceTrigger=PropertyChanged}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            <Button x:Uid="2" IsDefault="True" Width="100" Height="30" Margin="320 30 0 0" Content="Next" Style="{DynamicResource AccentedSquareButtonStyle}" Click="Button_Click"/>
                                        </WrapPanel>
                                    </Grid>
                                </UserControl>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                        <Controls:HamburgerMenuIconItem Label="Finish" x:Name="FinishSection">
                            <Controls:HamburgerMenuIconItem.Tag>
                                <UserControl DataContext="{StaticResource EnrollVM}" x:Name="EnrollUC">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <StackPanel Grid.Row="0">
                                            <TextBlock Text="Children" FontWeight="DemiBold" HorizontalAlignment="Left" FontSize="20" Margin="0 5 0 5" Width="300"/>
                                            <WrapPanel Width="450" HorizontalAlignment="Left">
                                                <TextBlock Text="Fullname: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference ChildrenTxtB}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Nickname: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference NickNameTxtB}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Birthdate: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference BirthDatePicker}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Sex: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference SexCBB}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Class: " Width="80" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference ClassNameCBB}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                            </WrapPanel>
                                        </StackPanel>
                                        <StackPanel Grid.Row="1">
                                            <TextBlock Text="Parent" FontWeight="DemiBold" HorizontalAlignment="Left" FontSize="20" Margin="0 5 0 5" Width="300"/>
                                            <WrapPanel Width="450" HorizontalAlignment="Left">
                                                <TextBlock Text="Mother's name: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference Mothertxb}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Father's name: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference Fathertxb}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Address: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Foreground="GhostWhite" Text="{Binding Source={x:Reference Addresstxb}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16"/>
                                                <TextBlock Text="Phone number: " Width="120" FontSize="16" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Source={x:Reference Phonetxb}, Path=Text, Mode=OneWay}" Margin="0 5 0 5" Width="300" FontSize="16" />
                                                <Button x:Uid="3" IsDefault="True" Command="{Binding EnrollCommand}" CommandParameter="{Binding ElementName=EnrollUC}" Width="100" Height="30" Margin="320 30 0 0" Content="Enroll" Style="{DynamicResource AccentedSquareButtonStyle}"/>
                                            </WrapPanel>
                                        </StackPanel>
                                    </Grid>
                                </UserControl>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>
                    </Controls:HamburgerMenuItemCollection>
                </Controls:HamburgerMenu.ItemsSource>


                <Controls:HamburgerMenu.ContentTemplate>
                    <DataTemplate DataType="{x:Type Controls:HamburgerMenuIconItem}">
                        <Grid Margin="20 0 10 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0"
                                       Margin="0 15 0 5"
                                       Padding="0"
                                       FontFamily="{DynamicResource HeaderFontFamily}"
                                       FontSize="{DynamicResource HeaderFontSize}"
                                       Text="{Binding Label}" />
                            <ScrollViewer Grid.Row="1"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                                <ContentControl Content="{Binding Tag}" Focusable="False" />
                            </ScrollViewer>
                        </Grid>
                    </DataTemplate>
                </Controls:HamburgerMenu.ContentTemplate>

            </Controls:HamburgerMenu>

        </Border>
    </Grid>
</UserControl>
